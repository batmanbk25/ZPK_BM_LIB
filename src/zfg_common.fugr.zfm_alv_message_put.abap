FUNCTION ZFM_ALV_MESSAGE_PUT.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(I_MTYPE) TYPE  BAPI_MTYPE DEFAULT 'E'
*"     VALUE(I_MESSAGE) TYPE  TEXT256 OPTIONAL
*"     VALUE(I_AUTO_DISABLE) TYPE  XMARK DEFAULT 'X'
*"     VALUE(I_RETURN) TYPE  ANY OPTIONAL
*"  EXPORTING
*"     REFERENCE(E_STATUS_ICON) TYPE  ZDD_STATUS_ICON
*"     REFERENCE(E_ROWCOLOR) TYPE  ANY
*"  CHANGING
*"     REFERENCE(C_ALVLINE) TYPE  ANY OPTIONAL
*"----------------------------------------------------------------------
  DATA:
    LS_MSG_DETAIL  TYPE ZST_ALV_MSG_DETAIL,
*    LS_MSG_CURRENT  TYPE ZST_ALV_MSG_DETAIL,
    LS_MSG_CURRENT TYPE ZST_ALV_INF_INCL,
*    LS_MSG_CURR_BU  TYPE ZST_ALV_MSG_DETAIL,
    LS_MSG_CURR_BU TYPE ZST_ALV_INF_INCL.
  FIELD-SYMBOLS:
    <LF_MTYPE>   TYPE ANY,
    <LF_MSGKEY>  TYPE ANY,
    <LF_MESSAGE> TYPE ANY.

* Get current message
  MOVE-CORRESPONDING C_ALVLINE TO LS_MSG_CURRENT.
  IF I_RETURN IS NOT INITIAL.
    MOVE-CORRESPONDING I_RETURN to LS_MSG_CURRENT.
  ENDIF.
  LS_MSG_CURR_BU = LS_MSG_CURRENT.

  IF I_MESSAGE IS INITIAL.
    I_MESSAGE = LS_MSG_CURRENT-MESSAGE.
  ENDIF.

  IF I_RETURN IS NOT INITIAL.
    MOVE-CORRESPONDING I_RETURN to LS_MSG_DETAIL.
  ENDIF.
  LS_MSG_DETAIL-MTYPE   = I_MTYPE.
  LS_MSG_DETAIL-MESSAGE = I_MESSAGE.

* Set message type, message content
  IF LS_MSG_CURRENT-MTYPE IS INITIAL.
    LS_MSG_CURRENT-MTYPE      = I_MTYPE.
    LS_MSG_CURRENT-MESSAGE    = I_MESSAGE.
  ELSE.
    CASE LS_MSG_CURRENT-MTYPE.
      WHEN GC_MTYPE_S.
        IF I_MTYPE NA 'WI'.
          LS_MSG_CURRENT-MTYPE      = I_MTYPE.
          LS_MSG_CURRENT-MESSAGE    = I_MESSAGE.
        ENDIF.
      WHEN GC_MTYPE_W.
        IF I_MTYPE = GC_MTYPE_E
        OR I_MTYPE = GC_MTYPE_P
        OR I_MTYPE = GC_MTYPE_S.
          LS_MSG_CURRENT-MTYPE    = I_MTYPE.
          LS_MSG_CURRENT-MESSAGE  = I_MESSAGE.
        ENDIF.
      WHEN GC_MTYPE_P.
        IF I_MTYPE = GC_MTYPE_E.
          LS_MSG_CURRENT-MTYPE    = I_MTYPE.
          LS_MSG_CURRENT-MESSAGE  = I_MESSAGE.
        ENDIF.
      WHEN OTHERS.
    ENDCASE.
  ENDIF.

* Set disable
  IF ( LS_MSG_DETAIL-MTYPE = GC_MTYPE_E
  OR LS_MSG_CURRENT-MTYPE = GC_MTYPE_E )
  AND I_AUTO_DISABLE = GC_XMARK.
    LS_MSG_CURRENT-DISABLE = GC_XMARK.
  ENDIF.

* Set row status or error
  IF E_STATUS_ICON IS REQUESTED
  AND E_ROWCOLOR IS REQUESTED.
    CALL FUNCTION 'ZFM_ALV_ROW_STATUS_SET'
      EXPORTING
        I_MTYPE       = LS_MSG_DETAIL-MTYPE
      IMPORTING
        E_STATUS_ICON = E_STATUS_ICON
        E_ROWCOLOR    = E_ROWCOLOR
      CHANGING
        C_ROW_DATA    = LS_MSG_DETAIL.
  ELSE.
    CALL FUNCTION 'ZFM_ALV_ROW_STATUS_SET'
      EXPORTING
        I_MTYPE    = LS_MSG_DETAIL-MTYPE
      CHANGING
        C_ROW_DATA = LS_MSG_DETAIL.

  ENDIF.
  APPEND LS_MSG_DETAIL TO LS_MSG_CURRENT-MSGDETAIL.
  MOVE-CORRESPONDING LS_MSG_CURRENT TO C_ALVLINE.

* Set row status
  IF LS_MSG_CURR_BU <> LS_MSG_CURRENT.
    CALL FUNCTION 'ZFM_ALV_ROW_STATUS_SET'
      EXPORTING
        I_MTYPE    = LS_MSG_CURRENT-MTYPE
        I_DISABLE  = LS_MSG_CURRENT-DISABLE
      CHANGING
        C_ROW_DATA = C_ALVLINE.
  ENDIF.


ENDFUNCTION.
