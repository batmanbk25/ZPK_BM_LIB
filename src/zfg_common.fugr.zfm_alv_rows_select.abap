FUNCTION ZFM_ALV_ROWS_SELECT.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(I_SEL_NONE) TYPE  XMARK OPTIONAL
*"     REFERENCE(I_SEL_SIZE) TYPE  INT4 OPTIONAL
*"  CHANGING
*"     REFERENCE(GO_ALV) TYPE REF TO  CL_GUI_ALV_GRID
*"     REFERENCE(GT_DATA) TYPE  TABLE
*"----------------------------------------------------------------------
DATA:
    LT_FILTER         TYPE LVC_T_FIDX,
    LW_INDEX_BE       TYPE SY-INDEX,
    LW_SEL_NUM        TYPE I,
    LW_INDEX          TYPE SY-INDEX,
    LW_WHERE_STR      TYPE STRING.
  FIELD-SYMBOLS:
    <LF_DATA>         TYPE ANY,
    <LF_DISABLE>      TYPE ANY,
    <LF_SELECT>       TYPE ANY.

  IF GO_ALV IS NOT INITIAL.
    CALL METHOD GO_ALV->GET_FILTERED_ENTRIES
      IMPORTING
        ET_FILTERED_ENTRIES = LT_FILTER. " Hidden rows
  ENDIF.

  IF I_SEL_NONE IS INITIAL
  AND I_SEL_SIZE > 0.
    LW_WHERE_STR = 'SELECTED = ''X'''.
    LOOP AT GT_DATA ASSIGNING <LF_DATA>
      WHERE (LW_WHERE_STR).
      LW_INDEX_BE = SY-TABIX.

      ASSIGN COMPONENT GC_SEL_COLUMN OF STRUCTURE <LF_DATA>
        TO <LF_SELECT>.
      IF SY-SUBRC IS INITIAL.
        CLEAR: <LF_SELECT>.
      ENDIF.
    ENDLOOP.
    LW_INDEX_BE = LW_INDEX_BE + 1.
  ELSE.
    LW_INDEX_BE = 1.
  ENDIF.

  LW_SEL_NUM = 0.
  LOOP AT GT_DATA ASSIGNING <LF_DATA> FROM LW_INDEX_BE.
    LW_INDEX = SY-TABIX.
    READ TABLE LT_FILTER TRANSPORTING NO FIELDS
      WITH KEY TABLE_LINE = LW_INDEX.
    IF SY-SUBRC IS NOT INITIAL.
      ASSIGN COMPONENT GC_DISABLE_COLUMN OF STRUCTURE <LF_DATA>
        TO <LF_DISABLE>.
      IF SY-SUBRC IS NOT INITIAL
      OR <LF_DISABLE> IS INITIAL.
        ASSIGN COMPONENT GC_SEL_COLUMN OF STRUCTURE <LF_DATA>
          TO <LF_SELECT>.
        IF SY-SUBRC IS INITIAL.
          IF I_SEL_NONE IS INITIAL.
            <LF_SELECT> = GC_XMARK.
            LW_SEL_NUM = LW_SEL_NUM + 1.
            IF I_SEL_SIZE > 0 AND I_SEL_SIZE = LW_SEL_NUM.
              EXIT.
            ENDIF.
          ELSE.
            CLEAR: <LF_SELECT>.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDLOOP.





ENDFUNCTION.
