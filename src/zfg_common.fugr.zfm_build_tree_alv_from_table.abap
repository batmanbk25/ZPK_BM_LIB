FUNCTION ZFM_BUILD_TREE_ALV_FROM_TABLE.
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(I_TREE_STR) TYPE  ZST_TREE_STR OPTIONAL
*"     REFERENCE(I_SHOW) TYPE  XMARK DEFAULT 'X'
*"     REFERENCE(I_SIDE) TYPE  I OPTIONAL
*"     REFERENCE(I_EXTENSION) TYPE  I OPTIONAL
*"     VALUE(I_CUS_CONTROL_NAME) TYPE  SCRFNAME OPTIONAL
*"     REFERENCE(I_LASTCOL) TYPE  I OPTIONAL
*"     REFERENCE(I_SORT_TABLE) TYPE  XMARK DEFAULT 'X'
*"     REFERENCE(I_HIERARCHY_HEADER) TYPE  TREEV_HHDR OPTIONAL
*"     REFERENCE(IS_VARIANT) TYPE  DISVARIANT OPTIONAL
*"     REFERENCE(I_SAVE) TYPE  CHAR01 DEFAULT 'A'
*"     REFERENCE(I_DEFAULT) TYPE  CHAR01 DEFAULT 'X'
*"     REFERENCE(IS_EXCEPTION_FIELD) TYPE  LVC_S_L004 OPTIONAL
*"     REFERENCE(IT_SPECIAL_GROUPS) TYPE  LVC_T_SGRP OPTIONAL
*"     REFERENCE(I_LOGO) TYPE  SDYDO_VALUE OPTIONAL
*"     REFERENCE(I_BACKGROUND_ID) TYPE  SDYDO_KEY OPTIONAL
*"     REFERENCE(IT_TOOLBAR_EXCLUDING) TYPE  UI_FUNCTIONS OPTIONAL
*"     REFERENCE(IT_EXCEPT_QINFO) TYPE  LVC_T_QINF OPTIONAL
*"     REFERENCE(I_REPID) TYPE  SY-REPID DEFAULT SY-CPROG
*"     REFERENCE(I_CUS_CONTAINER) TYPE REF TO CL_GUI_CONTAINER
*"         OPTIONAL
*"     REFERENCE(I_NODE_SEL_MODE) TYPE  I DEFAULT 0
*"     VALUE(I_ITEM_SELECTION) TYPE  XMARK DEFAULT 'X'
*"  EXPORTING
*"     REFERENCE(E_TREE_CONTROL) TYPE REF TO CL_GUI_ALV_TREE
*"     REFERENCE(E_DOCK_CONTAINER) TYPE
*"EF TO CL_GUI_DOCKING_CONTAINER
*"     REFERENCE(E_CUS_CONTAINER) TYPE REF TO CL_GUI_CUSTOM_CONTAINER
*"  CHANGING
*"     REFERENCE(T_TREE_TAB) TYPE  ANY TABLE
*"     REFERENCE(T_FIELDCAT) TYPE  LVC_T_FCAT OPTIONAL
*"     REFERENCE(IT_FILTER) TYPE  LVC_T_FILT OPTIONAL
*"--------------------------------------------------------------------
DATA:
    LT_FIELDCAT   TYPE LVC_T_FCAT.

* Standard tree structure
  PERFORM ALV_TREE_STANDARD_STRUCTURE
    USING T_TREE_TAB
    CHANGING I_TREE_STR.

* Build tree container
  PERFORM BUILD_TREE_ALV_OBJECTS
    USING I_SHOW
          I_SIDE
          I_EXTENSION
          I_CUS_CONTROL_NAME
          I_REPID
          I_CUS_CONTAINER
          I_NODE_SEL_MODE
          I_ITEM_SELECTION.

* Create Field catalog
  PERFORM CREATE_FIELDCATALOG
    USING I_TREE_STR-TABNM
          T_FIELDCAT[]
          I_LASTCOL
          SPACE
          SPACE
 CHANGING LT_FIELDCAT.

* Save data for tree
  PERFORM PUSH_TREE_ALV_DATA  USING T_TREE_TAB I_TREE_STR.

* Display tree
  PERFORM DISPLAY_TREE_ALV
    USING I_TREE_STR
          I_HIERARCHY_HEADER
          IS_VARIANT
          I_SAVE
          I_DEFAULT
          IS_EXCEPTION_FIELD
          IT_SPECIAL_GROUPS
          I_LOGO
          I_BACKGROUND_ID
          IT_TOOLBAR_EXCLUDING
          IT_EXCEPT_QINFO
          I_SORT_TABLE
  CHANGING
          LT_FIELDCAT
          IT_FILTER.

* Update tree data (Tree node key value)
  T_TREE_TAB        = <GFT_TREE_ALV_DATA>.

* Export control
  E_TREE_CONTROL    = GO_ALV_TREE.
  E_DOCK_CONTAINER  = GO_ALV_TREE_DOCK_CON.
  E_CUS_CONTAINER   = GO_ALV_TREE_CUS_CON.





ENDFUNCTION.
