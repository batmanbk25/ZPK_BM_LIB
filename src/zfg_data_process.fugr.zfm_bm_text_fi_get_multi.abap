FUNCTION ZFM_BM_TEXT_FI_GET_MULTI.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  CHANGING
*"     REFERENCE(CT_TEXT_FI) TYPE  ZTT_BM_TEXT_FI
*"----------------------------------------------------------------------
  DATA:
    LT_NAME_RANGE TYPE TSPSRNAME,
    LS_NAME_RANGE TYPE STXDRNAME,
    LT_TEXT_TAB   TYPE TEXT_LH,
    LT_ERR_TAB    TYPE TEXT_LH,
    BEGIN OF LS_FI_TEXT,
      BUKRS TYPE BKPF-BUKRS,
      BELNR TYPE BKPF-BELNR,
      GJAHR TYPE BKPF-GJAHR,
      DOCLN TYPE ACDOCA-DOCLN,
      BKTXT TYPE BKPF-BKTXT,
      SGTXT TYPE BSEG-SGTXT,
    END OF LS_FI_TEXT,
    LT_FI_TEXT LIKE TABLE OF LS_FI_TEXT,
    BEGIN OF LS_LINE,
      TDLINE TYPE TDLINE,
    END OF LS_LINE,
    LT_LINE LIKE TABLE OF LS_LINE.

  CHECK CT_TEXT_FI IS NOT INITIAL.

* Get header text, item text
  SELECT H~BUKRS H~BELNR H~GJAHR DOCLN BKTXT SGTXT
    FROM BKPF AS H INNER JOIN ACDOCA AS D
      ON H~BUKRS = D~RBUKRS
     AND H~BELNR = D~BELNR
     AND H~GJAHR = D~GJAHR
    INTO TABLE LT_FI_TEXT
     FOR ALL ENTRIES IN CT_TEXT_FI
   WHERE H~BUKRS = CT_TEXT_FI-BUKRS
     AND H~BELNR = CT_TEXT_FI-BELNR
     AND H~GJAHR = CT_TEXT_FI-GJAHR.
  SORT LT_FI_TEXT BY BUKRS BELNR GJAHR DOCLN.

* Prepare Object name to get long text
  LOOP AT CT_TEXT_FI ASSIGNING FIELD-SYMBOL(<LS_TEXT_FI>).
    CONCATENATE <LS_TEXT_FI>-BUKRS
                <LS_TEXT_FI>-BELNR
                <LS_TEXT_FI>-GJAHR
                <LS_TEXT_FI>-DOCLN
           INTO <LS_TEXT_FI>-TDOBNAME.

    LS_NAME_RANGE-SIGN    = 'I'.
    LS_NAME_RANGE-OPTION  = 'EQ'.
    LS_NAME_RANGE-LOW     = <LS_TEXT_FI>-TDOBNAME.
    APPEND LS_NAME_RANGE TO LT_NAME_RANGE.
  ENDLOOP.
  SORT CT_TEXT_FI BY BUKRS BELNR GJAHR DOCLN.

* Get long text
  CALL FUNCTION 'READ_MULTIPLE_TEXTS'
    EXPORTING
      OBJECT                  = 'DOC_ITEM'
      ID                      = '0001'
      LANGUAGE                = SY-LANGU
      NAME_RANGES             = LT_NAME_RANGE
    IMPORTING
      TEXT_TABLE              = LT_TEXT_TAB
      ERROR_TABLE             = LT_ERR_TAB
    EXCEPTIONS
      WRONG_ACCESS_TO_ARCHIVE = 1
      OTHERS                  = 2.

  LOOP AT CT_TEXT_FI ASSIGNING <LS_TEXT_FI>.
*   Set short text from header, item
    READ TABLE LT_FI_TEXT INTO LS_FI_TEXT
      WITH KEY BUKRS = <LS_TEXT_FI>-BUKRS
               BELNR = <LS_TEXT_FI>-BELNR
               GJAHR = <LS_TEXT_FI>-GJAHR
               DOCLN = <LS_TEXT_FI>-DOCLN BINARY SEARCH.
    IF SY-SUBRC IS INITIAL.
      <LS_TEXT_FI>-BKTXT = LS_FI_TEXT-BKTXT.
      <LS_TEXT_FI>-SGTXT = LS_FI_TEXT-SGTXT.
    ENDIF.

*   Set long text from item
    READ TABLE LT_TEXT_TAB INTO DATA(LS_TEXT)
      WITH KEY HEADER-TDNAME = <LS_TEXT_FI>-TDOBNAME.
    IF SY-SUBRC IS INITIAL.
      MOVE-CORRESPONDING LS_TEXT-LINES TO LT_LINE.
      CONCATENATE LINES OF LT_LINE INTO <LS_TEXT_FI>-T0001
        SEPARATED BY SPACE.
      IF <LS_TEXT_FI>-T0001 CA '&'.
        REPLACE ALL OCCURRENCES OF '<(>' IN <LS_TEXT_FI>-T0001 WITH SPACE.
        REPLACE ALL OCCURRENCES OF '<)>' IN <LS_TEXT_FI>-T0001 WITH SPACE.
      ENDIF.
    ENDIF.

    IF <LS_TEXT_FI>-T0001 IS NOT INITIAL.
      <LS_TEXT_FI>-DESCR = <LS_TEXT_FI>-T0001.
    ELSEIF <LS_TEXT_FI>-SGTXT IS NOT INITIAL.
      <LS_TEXT_FI>-DESCR = <LS_TEXT_FI>-SGTXT.
    ELSE.
      <LS_TEXT_FI>-DESCR = <LS_TEXT_FI>-BKTXT.
    ENDIF.
  ENDLOOP.

ENDFUNCTION.
