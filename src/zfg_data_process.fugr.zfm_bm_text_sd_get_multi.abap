FUNCTION ZFM_BM_TEXT_SD_GET_MULTI.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(IT_VBELN) TYPE  T_VBELN
*"     REFERENCE(I_ID) TYPE  THEAD-TDID DEFAULT '*'
*"  EXPORTING
*"     REFERENCE(ET_SD_TX) TYPE  ZTT_BM_SD_TX
*"----------------------------------------------------------------------
  DATA:
    LT_NAME_RANGE TYPE TSPSRNAME,
    LS_NAME_RANGE TYPE STXDRNAME,
    LT_TEXT_TAB   TYPE TEXT_LH,
    LT_ERR_TAB    TYPE TEXT_LH,
    LS_SD_TX      TYPE ZST_BM_SD_TX,
    BEGIN OF LS_LINE,
      TDLINE TYPE TDLINE,
    END OF LS_LINE,
    LT_LINE LIKE TABLE OF LS_LINE.

  CLEAR: ET_SD_TX.

  CHECK IT_VBELN IS NOT INITIAL.
  LOOP AT IT_VBELN INTO DATA(LS_VBELN).
    LS_NAME_RANGE-SIGN    = 'I'.
    LS_NAME_RANGE-OPTION  = 'EQ'.
    LS_NAME_RANGE-LOW     = LS_VBELN-VBELN.
    APPEND LS_NAME_RANGE TO LT_NAME_RANGE.
  ENDLOOP.

  CALL FUNCTION 'READ_MULTIPLE_TEXTS'
    EXPORTING
      OBJECT                  = 'VBBK'
      ID                      = I_ID
      LANGUAGE                = SY-LANGU
      NAME_RANGES             = LT_NAME_RANGE
    IMPORTING
      TEXT_TABLE              = LT_TEXT_TAB
      ERROR_TABLE             = LT_ERR_TAB
    EXCEPTIONS
      WRONG_ACCESS_TO_ARCHIVE = 1
      OTHERS                  = 2.

  LOOP AT LT_TEXT_TAB INTO DATA(LS_TEXT).
    READ TABLE IT_VBELN INTO LS_VBELN
      WITH KEY VBELN = LS_TEXT-HEADER-TDNAME.
    IF SY-SUBRC IS INITIAL.
      LS_SD_TX-VBELN  = LS_VBELN-VBELN.
      LS_SD_TX-TDID   = LS_TEXT-HEADER-TDID.
      MOVE-CORRESPONDING LS_TEXT-LINES TO LT_LINE.
      CONCATENATE LINES OF LT_LINE INTO LS_SD_TX-TEXT
        SEPARATED BY SPACE.
      IF LS_SD_TX-TEXT CA '&'.
        REPLACE ALL OCCURRENCES OF '<(>' IN LS_SD_TX-TEXT WITH SPACE.
        REPLACE ALL OCCURRENCES OF '<)>' IN LS_SD_TX-TEXT WITH SPACE.
      ENDIF.
      LS_SD_TX-LINES = LS_TEXT-LINES.
      APPEND LS_SD_TX TO ET_SD_TX.
    ENDIF.
  ENDLOOP.

ENDFUNCTION.
