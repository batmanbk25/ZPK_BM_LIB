FUNCTION ZFM_DATA_ADD_STR.
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(I_STR1) TYPE  ANY
*"     REFERENCE(I_STR2) TYPE  ANY
*"     REFERENCE(I_STRUCTURE) TYPE  TABNAME
*"  EXPORTING
*"     REFERENCE(E_RESULT_STR) TYPE  ANY
*"  EXCEPTIONS
*"      NO_STRUCTURE
*"--------------------------------------------------------------------
DATA:
    LT_FIELDCAT       TYPE LVC_T_FCAT,
    LS_FIELDCAT       TYPE LVC_S_FCAT.
  FIELD-SYMBOLS:
    <LF_FIELD_RESULT>  TYPE ANY,
    <LF_FIELD_STR1>    TYPE ANY,
    <LF_FIELD_STR2>    TYPE ANY.

  IF I_STRUCTURE IS INITIAL.
    RAISE NO_STRUCTURE.
  ENDIF.

* Get table name and field category
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME       = I_STRUCTURE
      I_INTERNAL_TABNAME     = I_STRUCTURE
    CHANGING
      CT_FIELDCAT            = LT_FIELDCAT
    EXCEPTIONS
      INCONSISTENT_INTERFACE = 1
      PROGRAM_ERROR          = 2
      OTHERS                 = 3.

* Move data from each field was marked 'Transport'
  LOOP AT LT_FIELDCAT INTO LS_FIELDCAT.
    ASSIGN COMPONENT LS_FIELDCAT-FIELDNAME OF STRUCTURE I_STR1
      TO <LF_FIELD_STR1>.
    ASSIGN COMPONENT LS_FIELDCAT-FIELDNAME OF STRUCTURE I_STR2
      TO <LF_FIELD_STR2>.
    ASSIGN COMPONENT LS_FIELDCAT-FIELDNAME OF STRUCTURE E_RESULT_STR
      TO <LF_FIELD_RESULT>.
    IF <LF_FIELD_STR1> IS ASSIGNED AND <LF_FIELD_STR2> IS ASSIGNED
    AND <LF_FIELD_RESULT> IS ASSIGNED.
      <LF_FIELD_RESULT> = <LF_FIELD_STR1> + <LF_FIELD_STR2>.
    ENDIF.
  ENDLOOP.





ENDFUNCTION.
