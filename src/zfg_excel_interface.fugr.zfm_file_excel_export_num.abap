FUNCTION ZFM_FILE_EXCEL_EXPORT_NUM.
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(I_LOGICALFILE) TYPE  ESEFTAPPL
*"     REFERENCE(I_DEFAULT_FILENAME) TYPE  STRING OPTIONAL
*"     REFERENCE(I_NO_ASK) TYPE  XMARK OPTIONAL
*"     REFERENCE(T_SQUARE_DATA) TYPE  ZTT_EXCEL_EXP
*"     REFERENCE(I_PAGESETUP) TYPE  ZST_EXCEL_PAGESETUP OPTIONAL
*"     REFERENCE(T_DEL_ROWS) TYPE  ZTT_BOLD_ROW OPTIONAL
*"  EXCEPTIONS
*"      SAVE_TEMPLATE_ERR
*"      OPEN_FILE_ERR
*"      EXPORT_ERR
*"--------------------------------------------------------------------
DATA:
        LW_LOCALFILE    TYPE LOCALFILE,
        LS_SQUARE_DATA  TYPE ZST_EXCEL_EXP,
        LT_SHEETS       TYPE SOI_SHEETS_TABLE,
        LS_SHEET        TYPE SOI_SHEETS,
        LO_SPREASHEET   TYPE REF TO I_OI_SPREADSHEET,
        LS_DIMENS       TYPE SOI_DIMENSION_ITEM,
        LW_TIME1        TYPE TIMS,
        LW_TIME2        TYPE TIMS,
        LW_TIME3        TYPE TIMS,
        LS_DELROW       TYPE ZST_BOLD_ROW,
        LW_DELETED_ROWS TYPE I,
        LS_MERGE_CELLS  TYPE ZST_CELLS_MERGE.

* Save template to client
  CALL FUNCTION 'ZFM_FILE_DOWNLOAD_TEMPLATE'
    EXPORTING
      I_FILENAME           = I_LOGICALFILE
      I_DEFAULT_FILENAME   = I_DEFAULT_FILENAME
    IMPORTING
      E_LOCALFILE          = LW_LOCALFILE
    EXCEPTIONS
      FILE_CLIENT_ERR      = 1
      USER_CANCEL          = 2
      SAVE_CLIENT_FILE_ERR = 3
      OTHERS               = 4.

  IF SY-SUBRC IS NOT INITIAL.
    IF SY-SUBRC = 2.
      RETURN.
    ENDIF.
    RAISE SAVE_TEMPLATE_ERR.
  ENDIF.

  LW_TIME1 = SY-UZEIT.

* Add row if need
  READ TABLE T_SQUARE_DATA TRANSPORTING NO FIELDS
    WITH KEY INSRW = 'X'.
  IF SY-SUBRC IS INITIAL.
*   Open file
    CALL FUNCTION 'ZFM_OLE_EXCEL_OPEN'
      EXPORTING
        I_FILENAME    = LW_LOCALFILE
      EXCEPTIONS
        EXCEL_APP_ERR = 1
        FILE_OPEN_ERR = 2
        OTHERS        = 3.

    LW_TIME2 = SY-UZEIT.
    LW_TIME3 = LW_TIME2 - LW_TIME1.
*  MESSAGE I009(ZFI_MS) WITH LW_TIME3 'Open file'.
    LW_TIME1 = SY-UZEIT.

*   Del rows
    LW_DELETED_ROWS = 0.
    LOOP AT T_DEL_ROWS INTO LS_DELROW.
      LS_DELROW-ROW = LS_DELROW-ROW - LW_DELETED_ROWS.
      CALL FUNCTION 'ZFM_OLE_EXCEL_ROWS_DELETE'
        EXPORTING
          I_TOP  = LS_DELROW-ROW
          I_ROWS = 1.
      LW_DELETED_ROWS = LW_DELETED_ROWS + 1.
    ENDLOOP.

*   Add row
    LOOP AT T_SQUARE_DATA INTO LS_SQUARE_DATA.
      IF LS_SQUARE_DATA-INSRW = 'X'
      OR LS_SQUARE_DATA-INSCL = 'X'.
*        CALL FUNCTION 'ZFM_FILE_EXCEL_DATA_GETDIMENS'
        CALL FUNCTION 'ZFM_FILE_EXCEL_DATA_GETDIM_NUM'
          IMPORTING
            E_DIMENSION  = LS_DIMENS
          TABLES
            T_EXCEL_DATA = LS_SQUARE_DATA-EXDATN.

        IF LS_SQUARE_DATA-INITROWS IS INITIAL.
          LS_DIMENS-ROWS      = LS_DIMENS-ROWS - 2.
*         Set row to last init row, to insert
          LS_DIMENS-ROW       = LS_DIMENS-ROW + 1.
        ELSE.
          LS_DIMENS-ROWS      = LS_DIMENS-ROWS
                              - LS_SQUARE_DATA-INITROWS.
*         Set row to last init row, to insert
          LS_DIMENS-ROW       = LS_DIMENS-ROW + LS_SQUARE_DATA-INITROWS
                              - 1.
        ENDIF.
*       Don't insert header row
        IF LS_SQUARE_DATA-EXHDR = 'X'.
          LS_DIMENS-ROW     = LS_DIMENS-ROW + 1.
          LS_DIMENS-ROWS    = LS_DIMENS-ROWS - 1.
        ENDIF.
*       Don't insert header column
        IF LS_SQUARE_DATA-EXHCL = 'X'.
          LS_DIMENS-COLUMN  = LS_DIMENS-COLUMN + 1.
          LS_DIMENS-COLUMNS = LS_DIMENS-COLUMNS - 1.
        ENDIF.
        IF LS_SQUARE_DATA-INSRW = 'X'.
          CALL FUNCTION 'ZFM_OLE_EXCEL_ROWS_INSERT'
            EXPORTING
              I_TOP  = LS_DIMENS-ROW
              I_ROWS = LS_DIMENS-ROWS.
        ENDIF.
        IF LS_SQUARE_DATA-INSCL = 'X'.
          LS_DIMENS-COLUMN    = LS_DIMENS-COLUMN + 1.
          IF LS_SQUARE_DATA-INITCOLS IS INITIAL.
            LS_DIMENS-COLUMNS   = LS_DIMENS-COLUMNS - 2.
          ELSE.
            LS_DIMENS-COLUMNS   = LS_DIMENS-COLUMNS
                                - LS_SQUARE_DATA-INITCOLS.
          ENDIF.
          CALL FUNCTION 'ZFM_OLE_EXCEL_COLS_INSERT'
            EXPORTING
              I_LEFT = LS_DIMENS-COLUMN
              I_COLS = LS_DIMENS-COLUMNS.
          LS_DIMENS-COLUMN    = LS_DIMENS-COLUMN - 1.
          LS_DIMENS-COLUMNS   = LS_DIMENS-COLUMNS + 2.
        ENDIF.
      ENDIF.

*     Set bold row
      IF LS_SQUARE_DATA-BLDRW[] IS NOT INITIAL.
        IF LS_SQUARE_DATA-EXHCL = 'X'.
          LS_DIMENS-COLUMN  = LS_DIMENS-COLUMN - 1.
          LS_DIMENS-COLUMNS = LS_DIMENS-COLUMNS + 1.
        ENDIF.
        CALL FUNCTION 'ZFM_OLE_EXCEL_ROWS_SETBOLD'
          EXPORTING
            I_LEFT      = LS_DIMENS-COLUMN
            I_COLS      = LS_DIMENS-COLUMNS
          TABLES
            T_BOLD_ROWS = LS_SQUARE_DATA-BLDRW.
      ENDIF.

*     Merge cells
      IF LS_SQUARE_DATA-MERGE_CELLS[] IS NOT INITIAL.
        LOOP AT LS_SQUARE_DATA-MERGE_CELLS INTO LS_MERGE_CELLS.
          CALL FUNCTION 'ZFM_OLE_EXCEL_CELLS_MERGE'
            EXPORTING
              I_ROW1 = LS_MERGE_CELLS-ROW1
              I_COL1 = LS_MERGE_CELLS-COL1
              I_ROW2 = LS_MERGE_CELLS-ROW2
              I_COL2 = LS_MERGE_CELLS-COL2.
        ENDLOOP.
      ENDIF.
    ENDLOOP.

    IF I_PAGESETUP IS NOT INITIAL.
      CALL FUNCTION 'ZFM_OLE_EXCEL_PAGESETUP'
        EXPORTING
          I_PAGESETUP = I_PAGESETUP.
    ENDIF.

*   Save file
    IF SY-SUBRC IS INITIAL.
      CALL FUNCTION 'ZFM_OLE_EXCEL_SAVE'
        EXPORTING
          I_FILENAME = LW_LOCALFILE.
    ENDIF.

*   Free all object
    CALL FUNCTION 'ZFM_OLE_EXCEL_FREE'.
  ENDIF.


* Open excel file witk DOI
  CALL FUNCTION 'ZFM_DOI_EXCEL_OPEN'
    EXPORTING
      I_FILENAME    = LW_LOCALFILE
    IMPORTING
      E_SPREADSHEET = LO_SPREASHEET
      T_SHEETS      = LT_SHEETS
    EXCEPTIONS
      OPEN_FILE_ERR = 1
      OTHERS        = 2.
  IF SY-SUBRC IS NOT INITIAL.
    RAISE OPEN_FILE_ERR.
  ENDIF.
  READ TABLE LT_SHEETS INTO LS_SHEET INDEX 1.

  LOOP AT T_SQUARE_DATA INTO LS_SQUARE_DATA.
*    CALL FUNCTION 'ZFM_DOI_EXCEL_DATA_EXPORT'
    CALL FUNCTION 'ZFM_DOI_EXCEL_DATA_EXPORT_NUM'
      EXPORTING
        I_SPREADSHEET = LO_SPREASHEET
        I_SHEETNAME   = LS_SHEET-SHEET_NAME
      TABLES
        T_EXCEL       = LS_SQUARE_DATA-EXDATN
      EXCEPTIONS
        EXPORT_ERR    = 1
        OTHERS        = 2.
    IF SY-SUBRC <> 0.
      RAISE EXPORT_ERR.
    ENDIF.

*   Set format cells
    IF LS_SQUARE_DATA-CELLS_FORMAT[] IS NOT INITIAL.
      CALL FUNCTION 'ZFM_DOI_EXCEL_FORMAT_CELLS'
        EXPORTING
          I_SPREADSHEET  = LO_SPREASHEET
          T_CELLS_FORMAT = LS_SQUARE_DATA-CELLS_FORMAT.

    ENDIF.
  ENDLOOP.

  CALL FUNCTION 'ZFM_DOI_EXCEL_CLOSE'
    EXPORTING
      I_FILENAME = LW_LOCALFILE
      I_NO_ASK   = I_NO_ASK.

  LW_TIME2 = SY-UZEIT.
  LW_TIME3 = LW_TIME2 - LW_TIME1.
*  MESSAGE I009(ZFI_MS) WITH LW_TIME3 'Work with DOI'.





ENDFUNCTION.
